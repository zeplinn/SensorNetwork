@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
@using SensorNetwork.ViewModels;
@using System.Globalization;
@using SensorNetwork.Views.Shared.Components.NetworkNavVC
@model HomeViewModel

@{
    ViewBag.Title = "Sensor Network";

}
@section Scripts{
    <script type="text/javascript" src="~/lib/jquery-flot/jquery.flot.js"></script>
    <script type="text/javascript" src="~/lib/jquery-flot/jquery.flot.time.js"></script>
    <script type="text/javascript" src="~/lib/jquery-ui-slider/jquery-ui.min.js"></script>
    <script type="text/javascript" src="~/lib/jquery-ui-slider-pips/dist/jquery-ui-slider-pips.min.js"~></script>
    <script type="text/javascript" src="~/js/selection.plot.js"></script>

    @*<script type="text/javascript" src="~/js/app-sidebar.js"></script>
        <script type="text/javascript" src="~/js/sidebarcontroller.js"></script>*@
    <script type="text/javascript" src="~/js/GraphUpdater.js"></script>

    <script>
        $(function () {
            $("#bonanza").selectionPlot();
            $('.sidebar-element').on('click', function () {
                var a = $(this).attr('data-panelid');
                var netId = $(this).attr('data-networkid');
                var p = { sensorId: a };
                //$.post("api/graph", { "post":"ramadingdong" }, function (data) {
                //    alert(data);
                //});
                $.ajax({
                    url: 'api/graph',
                    type: 'POST',
                    data: JSON.stringify(p),
                    contentType: "application/json",
                    datatype: "json",
                    success: function (result) {

                        var options = {
                            lines: {
                                show: true
                            },
                            points: {
                                show: false
                            },
                            xaxis: {
                                mode: "time",
                                tickSize: [30, "minute"],
                                tickFormatter: function (t, axis) {

                                    var date = new Date(t);
                                    if (date.getHours() % 3 == 0 && date.getMinutes() == 0) {

                                        var hours = date.getHours() < 10 ? "0" + date.getHours() : date.getHours();
                                        var minutes = date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes();


                                        return hours + ":" + minutes;
                                    } else {
                                        return "";
                                    }
                                }
                            },
                            yaxis: {
                                min: -20,
                                max: 50,
                                tickFormatter: function (v, axis) {
                                    return v;

                                }

                            }
                        };
                        var re = [[[1, 2], [2, 8], [3, -1]]];

                        var rre = result;
                        $.plot($("#NetworkGraph"+netId), [rre], options);
                        //var val = result.values
                        //$.flot($('#plotter'),[val])
                        //var arr = $.map(result, function (el) { return el });

                    }
                });
            });


                $('.sidebar-root').on('click', function () {
                    var a = $(this).attr('data-panelid');

                    $('#' + a).toggle();
                });

            });
            $("#chartupdater").on("load", function () {
                liveChart("#chartupdater");

        });
    </script>
}
<div class="container-fluid">
    <div class="row">
        <div class="col-md-10 col-xs-offset-1">

            <div class="panel-group" id="NetworkAccordion" role="tablist" aria-multiselectable="true">
                @foreach (var network in Model.Networks)
                {

                    @await Component.InvokeAsync(nameof(NetworkNavVC), network, "#NetworkAccordion")
                }
            </div>
        </div>

        <div class="c-green col-md-10">
            
            <div id="myupdater" class="col-md-9" style="height:300px"></div>
        </div>
        <div id="bonanza" style="height:400px"></div>
    </div>
</div>
